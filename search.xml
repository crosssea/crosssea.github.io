<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第六周</title>
      <link href="di-liu-zhou/"/>
      <url>di-liu-zhou/</url>
      
        <content type="html"><![CDATA[<blockquote><p>论文看的不多</p><p>感觉这方面的东西以前仅限于听过，还是要多了解一下</p></blockquote><h3 id="一-Convolutional-TripletAttention-Module"><a href="#一-Convolutional-TripletAttention-Module" class="headerlink" title="一. Convolutional TripletAttention Module"></a>一. Convolutional TripletAttention Module</h3><h3 id="Convolutional-TripletAttention-Module"><a href="#Convolutional-TripletAttention-Module" class="headerlink" title="Convolutional TripletAttention Module"></a>Convolutional TripletAttention Module</h3><img src=".\source\pic1.png" style="zoom:67%;" /><p>        作者指出以往的Attention机制的计算方法有许多的不足和缺陷，例如计算复杂度太高，忽略了空间和通道    之间的信息的相互之间的相关性等。        提出了一种参数量极少，却效率极高的三路并行的Attention Module。</p><h4 id="1-1-Channel-Attention-in-CBAM"><a href="#1-1-Channel-Attention-in-CBAM" class="headerlink" title="1.1 Channel Attention in CBAM"></a>1.1 Channel Attention in CBAM</h4><blockquote><p>$\chi \in R^{C \times H \times W}$是卷积之后的输出也就是CBAM的输入</p><p>求得权重     $\omega = \sigma(f_{(w_0,w_1)}(g(\chi)) +f_{(w_0,w_1)}(\delta(\chi)))  $</p><p>其中 $g$ 代表全局平均池化， $ f $代表全局最大池化 得到的 $w \in R^{C \times 1 \times 1}$</p></blockquote><p>虽然考虑了通道和空间信息，但是却没有考虑两者之间的联系</p><h4 id="1-2-Triplet-Attention"><a href="#1-2-Triplet-Attention" class="headerlink" title="1.2 Triplet Attention"></a>1.2 Triplet Attention</h4><p>结构</p><img src=".\source\pic2.png" style="zoom:67%;" /><blockquote><p>In simple terms, the spatial attention tells  ’where in the channel to focus’  and the channel attention tells  ’what channel to focus on’</p></blockquote><p>    作者指出传统的Attention的池化操作没有考虑到空间上的信息，而CBAM虽然使用全局平均池化来补充这个信息    却忽视了两者之间的联系，于是提出三路并行的Triplet Attention来捕捉 C,H,W 两两之间的信息</p><h5 id="1-2-1-Z-pool"><a href="#1-2-1-Z-pool" class="headerlink" title="1.2.1 Z-pool"></a>1.2.1 Z-pool</h5><p>​    $$Z-pool(\chi) = [MaxPool_{0d}(\chi),AvgPool_{0d}(\chi)]$$</p><blockquote><p>将最大值池化和平均池化的特征图拼接起来<br>其中 $0d$ 表示池化操作所在的维度是第0维</p></blockquote><h5 id="1-2-2-每个branch的操作过程"><a href="#1-2-2-每个branch的操作过程" class="headerlink" title="1.2.2 每个branch的操作过程"></a>1.2.2 每个branch的操作过程</h5><ul><li>相对某个维度进行旋转 (说的很玄乎，貌似就是一个转置)</li><li>利用两种池化消去第一个维度之后拼接，作者指出这样可以保留剩余两个维度之间的相关关系</li><li>经过卷积与激活函数之后与旋转之后的数据相乘</li><li>再将数据旋转回去</li><li>对三个分支的数据进行取平均值</li></ul><h5 id="1-2-3-参数分析和实验"><a href="#1-2-3-参数分析和实验" class="headerlink" title="1.2.3 参数分析和实验"></a>1.2.3 参数分析和实验</h5><img src=".\source\pic3.png" style="zoom:100%;" /><img src=".\source\pic5.png" alt="分类" style="zoom:67%;" /><img src=".\source\pic6.png" alt="目标检测" style="zoom:67%;" />]]></content>
      
      
      <categories>
          
          <category> 论文阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 克盐杂记 </tag>
            
            <tag> AttentionModule </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>变化检测</title>
      <link href="bian-hua-jian-ce/"/>
      <url>bian-hua-jian-ce/</url>
      
        <content type="html"><![CDATA[<p> 阅读了实验室的文章 Change Detection From Synthetic Aperture Radar Images Based on Channel Weighting-Based Deep Cascade Network </p><p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8911214">链接</a></p><blockquote></blockquote><h3 id="文章内容"><a href="#文章内容" class="headerlink" title="文章内容"></a>文章内容</h3><h4 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h4><blockquote><p>本文主要的内容是SAR图像的分类</p><p>文章指出随着网络深度的加深，卷积神经网络会遇到一些负面的影响， 例如引入一些冗余的信息和梯度爆炸问题</p><p>所以作者提出了一个深度级联网络(DCNet),学习具有区分度的特征，同时使用残差学习来解决梯度爆炸问题，对不同层的输出的特征图进行加权，采用fusion机制来进行融合，最后，利用池化技术来获得逐通道的信息。</p></blockquote><h4 id="网络结构"><a href="#网络结构" class="headerlink" title="网络结构"></a>网络结构</h4><blockquote><p>级联的卷积层</p><p>每层输出的特征图加权之后利用fusion机制融合</p><p>最后将所有特征图利用池化得到 channel-wise information</p><p>生成最后的变化map</p></blockquote><p><img src="./material/001DCNet.png" alt="网络结构"></p><h4 id="训练样本生成"><a href="#训练样本生成" class="headerlink" title="训练样本生成"></a>训练样本生成</h4><blockquote><p>首先先使用聚类方法将像素分成三类</p><p>变化的，不变的，不确定的</p><p>然后将不变的和变化的进行采样生成训练数据</p><p>训练之后对不确定的样本进行预测</p></blockquote><blockquote><p>对两张不同时间的图片从一个特定像素位置采样一块r*r的区域</p><p>拼接成一个2通道的训练图片</p></blockquote><p><img src="./material/001DCTnetSample_gen.png" alt="训练样本生成"></p><h4 id="基于通道加权的残差Block"><a href="#基于通道加权的残差Block" class="headerlink" title="基于通道加权的残差Block"></a>基于通道加权的残差Block</h4><p><img src="./material/001DCnetWRB.png"><br>$$<br>残差学习\<br>F(x) := H(x)-x\<br>转而学习\<br>H(x) := F(x)+x<br>$$</p><h5 id="通道加权的方法"><a href="#通道加权的方法" class="headerlink" title="通道加权的方法"></a>通道加权的方法</h5><blockquote><p>对输入的特征图进行卷积得到c个通道的特征图</p><p>分别进行最大值池化和平均池化得到$F_{avg}$和$F_{max}$</p><p>然后分别通过一个全连接层之后进行降维</p><p>再经给一个公共的全连接层生成开关向量</p><p>将这个向量与卷积的特征图进行逐通道的乘，得到$F_{cw}$</p></blockquote><p>$$<br>F_{avg}\in R^{1\times1\times c}<br>$$</p><p>$$<br>F_{max}\in R^{1\times1\times c}<br>$$</p><p>$$<br>W_{0}\in R^{ \frac {c}{t}*c}<br>$$</p><p>$$<br>W_{1}\in R^{ \frac {c}{t}*c}<br>$$</p><p>$$<br>W_{2}\in R^{c* \frac {c}{t}}<br>$$</p><p>$$<br>M = σ(W2δ(W0Favg)+W2δ(W1Fmax))<br>$$</p><h4 id="Fusion机制"><a href="#Fusion机制" class="headerlink" title="Fusion机制"></a>Fusion机制</h4><blockquote><p>对于不同层的特征图输出先采用1*1的卷积使得都成为64通道的输出</p><p>然后通过操作使得特征图大小一致后进行相加得到融合的特征</p></blockquote><p>$F = g1(F1)+g2(F2)) + g3(F3) $</p><h4 id="结果生成"><a href="#结果生成" class="headerlink" title="结果生成"></a>结果生成</h4><p>将融合的特征经给一系列的全连接层之后</p><p>最后成为一个二维的向量$(F_{c}, F_{u})$</p><p>在经过Softmax层，最终得到预测的变化和不变的概率<br>$$<br>P_c = \frac {e^{F_c}}{e^{F_c} + e^{F_u}}<br>$$</p><p>$$<br>P_u = \frac {e^{F_u}}{e^{F_c} + e^{F_u}}<br>$$<br>训练之后，对不确定的像素的进行预测，最终得到最后的变化结果图</p><h4 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h4><p>​    <img src="./material/DCNetRes.png"></p><p><img src="./material/DctnetRes2.png"></p><blockquote><p>可见相比于其他的方法基本都有较大的提升</p></blockquote><p>作者同时还分析了加权残差块对训练收敛速度的关系</p><p>以及对于不同数据集输入样本的Size的取值</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><blockquote><p>SAR图像的变化检测实际就是利用两张不同时间的图像进行地面要素的特征的变化与否进行检测</p><p>主要的问题主要在于怎样生成训练样本以及怎样设计网络</p><p>通道加权残差网络利用了残差学习来解决梯度爆炸问题使得网络可以更加的深</p><p>同时使用通道加权，增强了有用的输出通道，从而达到了良好的效果</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 论文阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 克盐杂记 </tag>
            
            <tag> 变化检测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>index</title>
      <link href="you-guan-yu-wo/"/>
      <url>you-guan-yu-wo/</url>
      
        <content type="html"><![CDATA[<blockquote><p>中国海洋大学 目前大四</p><p>保研本校 </p><p>算法爱好者</p><p>c++死忠粉(虽然在学python和java哈哈)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 自我介绍 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Demo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="hello-world/"/>
      <url>hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
